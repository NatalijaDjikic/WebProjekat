// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebProjekat.Migrations
{
    [DbContext(typeof(AerodromContext))]
    partial class AerodromContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Aerodrom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeAerodroma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeGrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Aerodromi");
                });

            modelBuilder.Entity("Models.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DatumiVreme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("IDKompanijeID")
                        .HasColumnType("int");

                    b.Property<string>("Kontinent")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("IDKompanijeID");

                    b.ToTable("Destinacije");
                });

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrSedista")
                        .HasColumnType("int");

                    b.Property<string>("ImeKompanije")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kompanije");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AerodromID")
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("PutnikID")
                        .HasColumnType("int");

                    b.Property<string>("TipSedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AerodromID");

                    b.HasIndex("DestinacijaID");

                    b.HasIndex("PutnikID");

                    b.ToTable("Letovi");
                });

            modelBuilder.Entity("Models.Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrLicneKarte")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("BrTelefona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("Models.Destinacija", b =>
                {
                    b.HasOne("Models.Kompanija", "IDKompanije")
                        .WithMany()
                        .HasForeignKey("IDKompanijeID");

                    b.Navigation("IDKompanije");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.HasOne("Models.Aerodrom", "Aerodrom")
                        .WithMany("LetoviZaAerodrom")
                        .HasForeignKey("AerodromID");

                    b.HasOne("Models.Destinacija", "Destinacija")
                        .WithMany("DestinacijaKompanija")
                        .HasForeignKey("DestinacijaID");

                    b.HasOne("Models.Putnik", "Putnik")
                        .WithMany("PutnikLet")
                        .HasForeignKey("PutnikID");

                    b.Navigation("Aerodrom");

                    b.Navigation("Destinacija");

                    b.Navigation("Putnik");
                });

            modelBuilder.Entity("Models.Aerodrom", b =>
                {
                    b.Navigation("LetoviZaAerodrom");
                });

            modelBuilder.Entity("Models.Destinacija", b =>
                {
                    b.Navigation("DestinacijaKompanija");
                });

            modelBuilder.Entity("Models.Putnik", b =>
                {
                    b.Navigation("PutnikLet");
                });
#pragma warning restore 612, 618
        }
    }
}
